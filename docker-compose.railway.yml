# Railway-optimized Docker Compose for local development and testing
# This mimics the Railway deployment structure for local testing

version: '3.8'

volumes:
  n8n_storage:
  postgres_storage:
  ollama_storage:
  qdrant_storage:

networks:
  railway_network:
    driver: bridge

services:
  postgres:
    image: postgres:16-alpine
    container_name: sparti-postgres
    networks: 
      - railway_network
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_storage:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  qdrant:
    build:
      context: .
      dockerfile: Dockerfile.qdrant
    container_name: sparti-qdrant
    networks: 
      - railway_network
    volumes:
      - qdrant_storage:/qdrant/storage
    ports:
      - "6333:6333"
    restart: unless-stopped

  ollama:
    build:
      context: .
      dockerfile: Dockerfile.ollama
    container_name: sparti-ollama
    networks: 
      - railway_network
    volumes:
      - ollama_storage:/root/.ollama
    ports:
      - "11434:11434"
    environment:
      OLLAMA_HOST: 0.0.0.0:11434
    restart: unless-stopped

  n8n:
    build:
      context: .
      dockerfile: Dockerfile.n8n
    container_name: sparti-n8n
    networks: 
      - railway_network
    environment:
      DB_TYPE: postgresdb
      DB_POSTGRESDB_HOST: postgres
      DB_POSTGRESDB_PORT: 5432
      DB_POSTGRESDB_USER: ${POSTGRES_USER}
      DB_POSTGRESDB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_POSTGRESDB_DATABASE: ${POSTGRES_DB}
      N8N_ENCRYPTION_KEY: ${N8N_ENCRYPTION_KEY}
      N8N_USER_MANAGEMENT_JWT_SECRET: ${N8N_USER_MANAGEMENT_JWT_SECRET}
      N8N_DIAGNOSTICS_ENABLED: false
      N8N_PERSONALIZATION_ENABLED: false
      OLLAMA_HOST: ollama:11434
      WEBHOOK_URL: ${WEBHOOK_URL:-}
      N8N_HOST: 0.0.0.0
      N8N_PORT: 5678
      N8N_PROTOCOL: http
    volumes:
      - n8n_storage:/home/node/.n8n
      - ./shared:/data/shared
    ports:
      - "5678:5678"
    depends_on:
      postgres:
        condition: service_healthy
      qdrant:
        condition: service_started
      ollama:
        condition: service_started
    restart: unless-stopped
